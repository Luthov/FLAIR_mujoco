Loading demo trajectory from file:  data/scooping_bowl_left_new_tf_rotated.csv
Skill library initialized
Feeding Bot initialized

--------------------
Log count 1
History []
--------------------

--------------------
History []
Actions remaining 10
Ready?
--------------------

--------------------
Labels: ['chicken 0.82', 'rice 0.76', 'egg 0.84']
Categories: ['meat/seafood', 'semisolid', 'meat/seafood']
Portions: [2.4, 2.8, 1.2]
--------------------

--------------------
Bite History []
Category List: ['meat/seafood', 'semisolid', 'meat/seafood']
Labels List: ['chicken', 'rice', 'egg']
Per Food Portions: [2.4, 2.8, 1.2]
--------------------

Food to consider:  range(0, 3)
catgories: ['meat/seafood', 'semisolid', 'meat/seafood'] | Food to consider: range(0, 3)

Length of next actions:  3
Candidate actions:  [(0, 'Scoop', {'scooping_point': [0.4, 0, 0.07500000000000001]}), (1, 'Scoop', {'scooping_point': [0.4, -0.25, 0.07500000000000001]}), (2, 'Scoop', {'scooping_point': [0.4, 0.25, 0.07500000000000001]})]
Efficiency scores before reciprocal:  [1, 1, 1]
Non dip labels:  ['chicken', 'rice', 'egg']
Efficiency scores:  [1, 1, 1]
Bite portions:  [2, 3, 1]
Preference:  I want to eat alternating bites of chicken and rice most of the time but I would like to eat some egg occasionally.
Press [n] to exit or otherwise I will query bite sequencing planner...

Reading prompts from prompts/ours_new.txt
==== ITEMS / PORTIONS REMAINING ===
['chicken', 'rice', 'egg'] [2, 3, 1]
====
==== SUMMARIZED EFFICIENCIES ===
[1, 1, 1]
==== HISTORY ===
[]
items: ['chicken', 'rice', 'egg'] portions: [2, 3, 1] efficiencies: [1, 1, 1] preference: I want to eat alternating bites of chicken and rice most of the time but I would like to eat some egg occasionally. dips: 0.0 history: []
Food Items Left: There are 2 portions of chicken, 3 portions of rice, and 1 portion of egg left on the plate.

Strategy: Since the preference is to alternate between chicken and rice most of the time but also incorporate egg occasionally, the high-level strategy involves starting with either chicken or rice, then alternating between them, and inserting the egg at a strategic point to maintain interest and diversity in flavor. To maintain balance and adhere to the preference, the egg will be fed after a few sequences of chicken and rice, to not disrupt the main alternating pattern too much.

Next bite: Feed chicken

Next bite (accounting for efficiency): Feed chicken (Efficiency for each food item is 1, making the decision based on preference the primary factor.)

Next bite as list: ['chicken']
Next bite ['chicken']
non_dip_labels ['chicken', 'rice', 'egg']
Next actions [(0, 'Scoop', {'scooping_point': [0.4, 0, 0.07500000000000001]}), (1, 'Scoop', {'scooping_point': [0.4, -0.25, 0.07500000000000001]}), (2, 'Scoop', {'scooping_point': [0.4, 0.25, 0.07500000000000001]})]
['chicken', 'rice', 'egg'] chicken
--------------------
food_id: 0 
action_type: Scoop 
metadata: {'scooping_point': [0.4, 0, 0.07500000000000001]}
--------------------

Continue to transfer? Remember to start horizontal spoon.Bite Transfer Executed
Continue to acquisition? Remember to shutdown horizontal spoon.
--------------------
History ['chicken']
Actions remaining 9
Ready?
--------------------

--------------------
Labels: ['chicken 0.82', 'rice 0.76', 'egg 0.84']
Categories: ['meat/seafood', 'semisolid', 'meat/seafood']
Portions: [1.9, 2.8, 1.2]
--------------------

--------------------
Bite History ['chicken']
Category List: ['meat/seafood', 'semisolid', 'meat/seafood']
Labels List: ['chicken', 'rice', 'egg']
Per Food Portions: [1.9, 2.8, 1.2]
--------------------

Food to consider:  range(0, 3)
catgories: ['meat/seafood', 'semisolid', 'meat/seafood'] | Food to consider: range(0, 3)

Length of next actions:  3
Candidate actions:  [(0, 'Scoop', {'scooping_point': [0.4, 0, 0.07500000000000001]}), (1, 'Scoop', {'scooping_point': [0.4, -0.25, 0.07500000000000001]}), (2, 'Scoop', {'scooping_point': [0.4, 0.25, 0.07500000000000001]})]
Efficiency scores before reciprocal:  [1, 1, 1]
Non dip labels:  ['chicken', 'rice', 'egg']
Efficiency scores:  [1, 1, 1]
Bite portions:  [2, 3, 1]
Preference:  I want to eat alternating bites of chicken and rice most of the time but I would like to eat some egg occasionally.
Press [n] to exit or otherwise I will query bite sequencing planner...

Reading prompts from prompts/ours_new.txt
==== ITEMS / PORTIONS REMAINING ===
['chicken', 'rice', 'egg'] [2, 3, 1]
====
==== SUMMARIZED EFFICIENCIES ===
[1, 1, 1]
==== HISTORY ===
['chicken']
items: ['chicken', 'rice', 'egg'] portions: [2, 3, 1] efficiencies: [1, 1, 1] preference: I want to eat alternating bites of chicken and rice most of the time but I would like to eat some egg occasionally. dips: 0.0 history: ['chicken']
Food Items Left: There are 2 portions of chicken, 3 portions of rice, and 1 portion of egg remaining on the plate.

Strategy: My strategy involves alternating between bites of chicken and rice to adhere to the preference for alternating these two items most of the time. Given the latest bite was chicken, the next in the sequence should be rice to maintain the alternating pattern. The egg will be introduced occasionally, ensuring a varied and enjoyable eating experience without disrupting the alternating pattern substantially. Since there are no dipping sauces remaining, no items will be dipped.

Next bite: Given the last bite was chicken, the next bite should be rice to continue the alternating pattern.

Next bite (accounting for efficiency): The efficiency values for chicken, rice, and egg are all the same (1), meaning there's no need to adjust the strategy based on efficiency. Thus, the next bite remains rice.

Next bite as list: ['rice']
Next bite ['rice']
non_dip_labels ['chicken', 'rice', 'egg']
Next actions [(0, 'Scoop', {'scooping_point': [0.4, 0, 0.07500000000000001]}), (1, 'Scoop', {'scooping_point': [0.4, -0.25, 0.07500000000000001]}), (2, 'Scoop', {'scooping_point': [0.4, 0.25, 0.07500000000000001]})]
['chicken', 'rice', 'egg'] rice
--------------------
food_id: 1 
action_type: Scoop 
metadata: {'scooping_point': [0.4, -0.25, 0.07500000000000001]}
--------------------

Continue to transfer? Remember to start horizontal spoon.
Continue to acquisition? Remember to shutdown horizontal spoon.
--------------------
History ['chicken', 'rice']
Actions remaining 8
Ready?
--------------------

--------------------
Labels: ['chicken 0.82', 'rice 0.76', 'egg 0.84']
Categories: ['meat/seafood', 'semisolid', 'meat/seafood']
Portions: [1.9, 2.3, 1.2]
--------------------

--------------------
Bite History ['chicken', 'rice']
Category List: ['meat/seafood', 'semisolid', 'meat/seafood']
Labels List: ['chicken', 'rice', 'egg']
Per Food Portions: [1.9, 2.3, 1.2]
--------------------

Food to consider:  range(0, 3)
catgories: ['meat/seafood', 'semisolid', 'meat/seafood'] | Food to consider: range(0, 3)

Length of next actions:  3
Candidate actions:  [(0, 'Scoop', {'scooping_point': [0.4, 0, 0.07500000000000001]}), (1, 'Scoop', {'scooping_point': [0.4, -0.25, 0.07500000000000001]}), (2, 'Scoop', {'scooping_point': [0.4, 0.25, 0.07500000000000001]})]
Efficiency scores before reciprocal:  [1, 1, 1]
Non dip labels:  ['chicken', 'rice', 'egg']
Efficiency scores:  [1, 1, 1]
Bite portions:  [2, 2, 1]
Preference:  I want to eat alternating bites of chicken and rice most of the time but I would like to eat some egg occasionally.
Press [n] to exit or otherwise I will query bite sequencing planner...
